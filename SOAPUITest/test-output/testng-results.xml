<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="19975" started-at="2017-01-31T10:22:42Z" finished-at="2017-01-31T10:23:02Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="19975" started-at="2017-01-31T10:22:42Z" finished-at="2017-01-31T10:23:02Z">
      <class name="com.prl.soapuitest.TestCreator">
        <test-method status="PASS" signature="findMethodName(java.lang.reflect.Method)[pri:0, instance:com.prl.soapuitest.TestCreator@6e9319f]" test-instance-name="TestCase 1" name="findMethodName" is-config="true" duration-ms="12" started-at="2017-01-31T15:52:42Z" finished-at="2017-01-31T15:52:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.prl.soapuitest.TestCreator.Test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findMethodName -->
        <test-method status="PASS" signature="Test1()[pri:0, instance:com.prl.soapuitest.TestCreator@2416a51]" test-instance-name="TestCase 1" name="Test1" duration-ms="3847" started-at="2017-01-31T15:52:42Z" finished-at="2017-01-31T15:52:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method status="PASS" signature="findMethodName(java.lang.reflect.Method)[pri:0, instance:com.prl.soapuitest.TestCreator@6e9319f]" test-instance-name="TestCase2" name="findMethodName" is-config="true" duration-ms="1" started-at="2017-01-31T15:52:46Z" finished-at="2017-01-31T15:52:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.prl.soapuitest.TestCreator.Test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findMethodName -->
        <test-method status="PASS" signature="Test1()[pri:0, instance:com.prl.soapuitest.TestCreator@6e9319f]" test-instance-name="TestCase2" name="Test1" duration-ms="3" started-at="2017-01-31T15:52:46Z" finished-at="2017-01-31T15:52:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method status="PASS" signature="findMethodName(java.lang.reflect.Method)[pri:0, instance:com.prl.soapuitest.TestCreator@6e9319f]" test-instance-name="GroovyTest1" name="findMethodName" is-config="true" duration-ms="1" started-at="2017-01-31T15:52:46Z" finished-at="2017-01-31T15:52:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.prl.soapuitest.TestCreator.Test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findMethodName -->
        <test-method status="FAIL" signature="Test1()[pri:0, instance:com.prl.soapuitest.TestCreator@6fa590ba]" test-instance-name="GroovyTest1" name="Test1" duration-ms="16046" started-at="2017-01-31T15:52:46Z" finished-at="2017-01-31T15:53:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [FINISHED] but found [FAILED]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [FINISHED] but found [FAILED]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at com.prl.soapuitest.TestCreator.Test1(TestCreator.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
      </class> <!-- com.prl.soapuitest.TestCreator -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
